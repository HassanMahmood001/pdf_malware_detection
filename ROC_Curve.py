from sklearn.datasets import make_classification
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_curve
from sklearn.metrics import roc_auc_score
from matplotlib import pyplot
import pandas as pd 
import joblib
import matplotlib.pyplot as plt
from sklearn import metrics

dataset = pd.read_csv('Final_Dataset.csv')

X = dataset.drop('Malicious',axis=1).values
y = dataset['Malicious'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.40, shuffle= True,random_state=10)

X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25,shuffle= True,random_state=10)  # 0.25 x 0.8 = 0.20

# roc curve for tpr = fpr 
random_probs = [0 for i in range(len(y_test))]
p_fpr, p_tpr, _ = roc_curve(y_test, random_probs, pos_label=1)

fule = './lib/knn_finalized_model.sav'
loaded_model = joblib.load(fule)

predictor = loaded_model.predict(X_test)

fpr, tpr, thresholds = metrics.roc_curve(y_test, predictor)
# print(fpr)
# print(tpr)
fule2 = './lib/DT_finalized_model.sav'
loaded_model2 = joblib.load(fule)

predictor2 = loaded_model2.predict(X_test)

fpr2, tpr2, thresholds2 = metrics.roc_curve(y_test, predictor2)

fule3 = './lib/SVM_model.sav'
loaded_model3 = joblib.load(fule)

predictor3 = loaded_model3.predict(X_test)

fpr3, tpr3, thresholds3 = metrics.roc_curve(y_test, predictor3)
plt.style.use('seaborn')

# plot roc curves
# plt.plot(fpr, tpr, linestyle='--',color='orange', label='KNN')
# plt.plot(fpr2, tpr2, linestyle='--',color='orange', label='Decision Tree')
plt.plot(fpr3, tpr3, linestyle='--',color='orange', label='SVM')
plt.plot(p_fpr, p_tpr, linestyle='--', color='blue')
# title
plt.title('ROC curve')
# x label
plt.xlabel('False Positive Rate')
# y label
plt.ylabel('True Positive rate')

plt.legend(loc='best')
plt.savefig('./ROC',dpi=300)
plt.show()